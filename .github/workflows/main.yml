# This is a basic workflow to help you get started with Actions

name: Build bundles

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, deb_packages ]
  pull_request:
    branches: [ master, deb_packages ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          lfs: true

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
          cache-key: flutter # optional, change this to force refresh cache
          cache-path: ${{ runner.tool_cache }}/flutter # optional, change this to specify the cache path
          architecture: x64 # optional, x64 or arm64

      - name: Install dependencies
        run: |
          ./install_dependencies_debian.sh

      - name: Build amd64 artifacts
        run: |
          flutter config --enable-linux-desktop
          flutter pub get
          make deb_package -j16

      - name: Archive amd64 bundle
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          directory: 'build/zenith/release/bundle/'
          filename: 'bundle_amd64.zip'

      - uses: uraimo/run-on-arch-action@v2
        name: Build arm64 artifacts
        id: arm64_artifacts
        with:
          arch: aarch64
          distro: ubuntu22.04

          # Create an arm64_artifacts directory
          setup: |
            mkdir -p "${PWD}/arm64_artifacts"

          # Mount the arm64_artifacts directory as /arm64_artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/arm64_artifacts:/arm64_artifacts"

          run: |
            apt update -y
            apt install -y sudo curl file git unzip debianutils xz-utils zip pkg-config build-essential
            ./install_dependencies_debian.sh
            git clone -b stable https://github.com/flutter/flutter.git
            export PATH="$PATH:$PWD/flutter/bin"
            flutter config --enable-linux-desktop
            flutter doctor
            
            flutter pub get
            make release_bundle -j16
            make deb_package
            cp build/zenith/release/deb/*.deb /arm64_artifacts

      - name: Create a release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "release-${{ github.run_id }}"
          prerelease: false
          files: |
            build/zenith/release/bundle/*.zip
            build/zenith/release/deb/*.deb
            arm64_artifacts/*
